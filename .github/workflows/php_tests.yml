name: PHP Tests

on:
  workflow_call:
    inputs:
      test-suite:
        required: true
        type: string
        description: 'The test suite to run'
      env-file:
        required: true
        type: string
        description: 'The env files to use'

jobs:
  tests:
    name: ${{ matrix.php-version }} - ${{ matrix.sql-versions }} -- ${{ inputs.test-suite }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - 8.2
          - 8.3
        sql-versions:
          - mariadb
          - postgresql
          - sqlite
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      extensions: bcmath, curl, dom, gd, imagick, json, libxml, mbstring, pcntl, pdo, pdo_sqlite, pdo_mysql, pdo_pgsql, pgsql, sqlite3, zip

    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set Up Imagick, FFmpeg & Exiftools
        run: |
          sudo apt-get update
          sudo apt-get --fix-broken install
          sudo apt-get -y install ffmpeg libimage-exiftool-perl

      - name: setup Databases
        run: |
          sudo service mysql start
          touch database/database.sqlite
          mysql -uroot -proot -e 'create database homestead_test;'

      - name: Setup PHP Action
        uses: shivammathur/setup-php@a4e22b60bbb9c1021113f2860347b0759f66fe5d # 2.30.0
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.extensions }}
          coverage: xdebug
          tools: pecl, composer

      - name: Install Composer dependencies
        uses: ramsey/composer-install@57532f8be5bda426838819c5ee9afb8af389d51a # 3.0.0

      - name: copy Env
        run: |
          cp .github/workflows/${{ inputs.env-file }}.${{ matrix.sql-versions }} .env

      - name: Generate secure key & Optimize application & Migrate
        run: |
          php artisan key:generate
          php artisan optimize
          php artisan migrate

      - name: Apply tests ${{ inputs.test-suite }}
        run: XDEBUG_MODE=coverage vendor/bin/phpunit --testsuite ${{ inputs.test-suite }}

      - name: Make sure we can go backward
        run: php artisan migrate:rollback

      - name: Codecov
        uses: codecov/codecov-action@54bcd8715eee62d40e33596ef5e8f0f48dbbccab # v4.1.0
        env:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@e44258b109568baa0df60ed515909fc6c72cba92 # v2.3.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}