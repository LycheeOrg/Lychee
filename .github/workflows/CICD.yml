name: Integrate

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    paths-ignore:
      - '**/*.md'
      - 'public/dist/*.js'
      - 'public/dist/**/*.js'
      - 'public/Lychee-front'
  pull_request:
    paths-ignore:
      - '**/*.md'
      - 'public/dist/*.js'
      - 'public/dist/**/*.js'
      - 'public/Lychee-front'
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Declare default permissions as read only.
permissions: read-all

jobs:
  kill_previous:
    name: 0️⃣ Kill previous runs
    runs-on: ubuntu-latest
    # We want to run on external PRs, but not on our own internal PRs as they'll be run by the push to the branch.
    if: (github.event_name == 'push' || github.event.pull_request.head.repo.full_name != github.repository)
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@85880fa0301c86cca9da44039ee3bb12d3bedbfa # 0.12.1
        with:
          access_token: ${{ github.token }}

  php_syntax_errors:
    name: 1️⃣ PHP 8.2 - Syntax errors
    runs-on: ubuntu-latest
    needs:
      - kill_previous
    steps:
      - name: Setup PHP Action
        uses: shivammathur/setup-php@a4e22b60bbb9c1021113f2860347b0759f66fe5d # 2.30.0
        with:
          php-version: 8.2

      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install dependencies
        uses: ramsey/composer-install@57532f8be5bda426838819c5ee9afb8af389d51a # 3.0.0

      - name: Check source code for syntax errors
        run: vendor/bin/parallel-lint --exclude .git --exclude vendor .

  code_style_errors:
    name: 2️⃣ PHP 8.2 - Code Style errors
    runs-on: ubuntu-latest
    needs:
      - php_syntax_errors
    steps:
      - name: Set up PHP
        uses: shivammathur/setup-php@a4e22b60bbb9c1021113f2860347b0759f66fe5d # 2.30.0
        with:
          php-version: 8.2

      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install dependencies
        uses: ramsey/composer-install@57532f8be5bda426838819c5ee9afb8af389d51a # 3.0.0

      - name: Check source code for code style errors
        run: PHP_CS_FIXER_IGNORE_ENV=1 vendor/bin/php-cs-fixer fix --config=.php-cs-fixer.php --verbose --diff --dry-run

  check_js:
    uses: ./.github/workflows/js_check.yml
    needs:
      - php_syntax_errors
    name: 2️⃣ JS front-end

  phpstan:
    name: 2️⃣ PHP 8.2 - PHPStan
    runs-on: ubuntu-latest
    needs:
      - php_syntax_errors
    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup PHP
        uses: shivammathur/setup-php@a4e22b60bbb9c1021113f2860347b0759f66fe5d # 2.30.0
        with:
          php-version: 8.2
          coverage: none

      - name: Install Composer dependencies
        uses: ramsey/composer-install@57532f8be5bda426838819c5ee9afb8af389d51a # 3.0.0

      - name: Run PHPStan
        run: vendor/bin/phpstan analyze

  tests_legacy:
    name:  2️⃣ PHP tests legacy 
    needs:
      - php_syntax_errors
    uses: ./.github/workflows/php_tests.yml
    with:
      test-suite: 'Feature_v1'
      env-file: '.env.legacy'

  dist:
    name:  3️⃣ PHP dist
    needs:
      - code_style_errors
    uses: ./.github/workflows/php_dist.yml
    with:
      env-file: '.env.legacy'

  createArtifact:
    name: 4️⃣ Build Artifact
    if: github.ref == 'refs/heads/master'
    needs:
      - phpstan
      - dist
      - tests_legacy
      - check_js
    runs-on: ubuntu-latest
    env:
      extensions: bcmath, curl, dom, gd, imagick, json, libxml, mbstring, pcntl, pdo, pdo_sqlite, pdo_mysql, pdo_pgsql, pgsql, sqlite3, zip

    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Setup PHP
        uses: shivammathur/setup-php@a4e22b60bbb9c1021113f2860347b0759f66fe5d # 2.30.0
        with:
          php-version: 8.2
          extensions: ${{ env.extensions }}
          coverage: none

      - name: Install Composer dependencies
        uses: ramsey/composer-install@57532f8be5bda426838819c5ee9afb8af389d51a # 3.0.0
        with:
          composer-options: --no-dev

      - name: Use Node.js 20
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
            node-version: 20

      - name: Install
        run: npm install

      - name: Compile Front-end
        run: npm run build

      - name: Build Dist
        run: |
          make clean dist

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        with:
          name: Lychee-Dist.zip
          path: Lychee.zip
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`
