name: PHP Dist

on:
  workflow_call:

permissions:
  contents: read

jobs:
  php_dist:
    name: ${{ matrix.php-version }} - ${{ matrix.sql-versions }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - 8.3
        sql-versions:
          - mariadb
          - postgresql
          - sqlite
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      extensions: bcmath, curl, dom, gd, imagick, json, libxml, mbstring, pcntl, pdo, pdo_sqlite, pdo_mysql, pdo_pgsql, pgsql, sqlite3, zip

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set Up Imagick, FFmpeg & Exiftools
        run: |
          sudo apt-get update
          sudo apt-get --fix-broken install
          sudo apt-get -y install ffmpeg libimage-exiftool-perl

      - name: setup Databases
        run: |
          sudo service mysql start
          touch database/database.sqlite
          mysql -uroot -proot -e 'create database homestead_test;'

      - name: Setup PHP Action
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # 2.32.0
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.extensions }}
          tools: pecl, composer

      - name: Build Dist
        run: |
          make dist-clean

      - name: copy Env
        run: |
          cp .github/workflows/.env.${{ matrix.sql-versions }} Lychee/.env

      - name: setup MySQL Database with v3
        run: |
          mysql -uroot -proot homestead_test < .github/workflows/v3.sql

      - name: Generate secure key & Migrate & go backward
        run: |
          cd Lychee
          pwd
          php artisan key:generate
          php artisan migrate
          php artisan migrate:rollback
