name: Check JS

on:
  workflow_call:
    inputs:
      test-suite:
        required: true
        type: string
        description: 'The test suite to run'
      env-file:
        required: true
        type: string
        description: 'The env files to use'
    secrets:
      CODECOV_TOKEN: 
        required: true
        description: 'codecov token secret'

permissions:
  contents: read

jobs:
  tests:
    permissions:
      contents: read  # for actions/checkout to fetch code
      pull-requests: read 
    name: ${{ matrix.php-version }} - ${{ matrix.sql-versions }} -- ${{ inputs.test-suite }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-version:
          - 8.4
        sql-versions:
          - mariadb
          - postgresql
          - sqlite
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    env:
      extensions: bcmath, curl, dom, gd, imagick, json, libxml, mbstring, pcntl, pdo, pdo_sqlite, pdo_mysql, pdo_pgsql, pgsql, sqlite3, zip

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      
      - name: Removing legacy files
        run: |
          sh scripts/delete_legacy.sh

      - name: Set Up Imagick, FFmpeg & Exiftools
        run: |
          sudo apt-get update
          sudo apt-get --fix-broken install
          sudo apt-get -y install ffmpeg libimage-exiftool-perl

      - name: setup Databases
        run: |
          sudo service mysql start
          touch database/database.sqlite
          mysql -uroot -proot -e 'create database homestead_test;'

      - name: Setup PHP Action
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401 # 2.32.0
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.extensions }}
          coverage: xdebug
          tools: pecl, composer

      - name: Install Composer dependencies
        uses: ramsey/composer-install@a2636af0004d1c0499ffca16ac0b4cc94df70565 # 3.1.0

      - name: copy Env
        run: |
          cp .github/workflows/${{ inputs.env-file }}.${{ matrix.sql-versions }} .env

      - name: Generate secure key & Optimize application & Migrate
        run: |
          php artisan key:generate
          php artisan optimize
          php artisan migrate

      - name: Apply tests ${{ inputs.test-suite }}
        run: XDEBUG_MODE=coverage vendor/bin/phpunit --configuration phpunit.ci.xml --testsuite ${{ inputs.test-suite }}

      - name: Make sure we can go backward
        run: php artisan migrate:rollback

      - name: Codecov
        uses: codecov/codecov-action@ad3126e916f78f00edff4ed0317cf185271ccc2d # v5.4.2
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
