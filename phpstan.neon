includes:
	- vendor/nunomaduro/larastan/extension.neon
	- vendor/phpstan/phpstan-deprecation-rules/rules.neon
	- vendor/thecodingmachine/phpstan-safe-rule/phpstan-safe-rule.neon
	- vendor/phpstan/phpstan-strict-rules/rules.neon

services:
	-
		class: PHPStan\Rules\StrictCalls\StrictFunctionCallsRule
		tags:
			- phpstan.rules.rule

	-
		class: PHPStan\Rules\SwitchConditions\MatchingTypeInSwitchCaseConditionRule
		tags:
			- phpstan.rules.rule

parameters:
	level: 7
	reportMaybesInPropertyPhpDocTypes: false
	checkMissingIterableValueType: false
	paths:
		- app
	excludePaths:
		- app/Relations/*
		- app/View/*
		- app/Http/Livewire/*
	ignoreErrors:
		- '#Short ternary operator is not allowed#' # we like short ternary
		- '#Construct empty\(\) is not allowed#' # we like empty()

		# bunch of false positives from Eloquent
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::insert\(\).#'
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::select\(\).#'
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::orderBy\(\)#'
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::where(Null|In)?\(\).#'
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::inRandomOrder\(\)#'
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::delete\(\)#'
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::without\(\)#'
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::whereBetween\(\)#'
		- '#Dynamic call to static method Illuminate\\Database\\Eloquent\\.*::count\(\).#'
		- '#Call to an undefined method Illuminate\\Database\\Eloquent\\.*::withOnly\(\)#'
		- '#Call to an undefined method Illuminate\\Database\\Eloquent\\.*::getLft\(\).#'
		- '#Call to an undefined method Illuminate\\Database\\Eloquent\\.*::getRgt\(\).#'
		- '#Call to an undefined method Illuminate\\Database\\Eloquent\\.*::descendants\(\).#'
		- '#Call to an undefined method Illuminate\\Database\\Eloquent\\.*::getLftName\(\).#'
		- '#Call to an undefined method Illuminate\\Database\\Eloquent\\.*::newNestedSetQuery\(\).#'
		- '#Call to private method truncate\(\) of parent class Illuminate\\Database\\Eloquent\\Builder<Illuminate\\Database\\Eloquent\\Model>.#'
		- '#Call to private method limit\(\) of parent class Illuminate\\Database\\Eloquent\\Builder<Illuminate\\Database\\Eloquent\\Model>.#'
		- '#Call to private method latest\(\) of parent class Illuminate\\Database\\Eloquent\\Relations\\HasMany<Illuminate\\Database\\Eloquent\\Model>#'
		- '#Call to private method offset\(\) of parent class Illuminate\\Database\\Eloquent\\Builder<Illuminate\\Database\\Eloquent\\Model>.#'
		- '#Call to private method count\(\) of parent class Illuminate\\Database\\Eloquent\\Builder<Illuminate\\Database\\Eloquent\\Model>.#'
		- '#Call to private method take\(\) of parent class Illuminate\\Database\\Eloquent\\Builder<Illuminate\\Database\\Eloquent\\Model>.#'
		- '#Call to private method from\(\) of parent class Illuminate\\Database\\Eloquent\\Builder<Illuminate\\Database\\Eloquent\\Model>.#'
		- '#Call to private method where(Not)?(Null|In|Exists)?\(\) of parent class Illuminate\\Database\\Eloquent\\Builder<Illuminate\\Database\\Eloquent\\Model>.#'
		- '#Call to protected method asDateTime\(\) of class Illuminate\\Database\\Eloquent\\Model.#'
		- '#Dynamic call to static method Illuminate\\Http\\Request::validate\(\)#'

		# Covariance - LSP princinple: https://en.wikipedia.org/wiki/Liskov_substitution_principle
		- '#Return type \(Illuminate\\Support\\Carbon\|null\) of method App\\Models\\.*::asDateTime\(\) should be covariant with return type \(Illuminate\\Support\\Carbon\) of method Illuminate\\Database\\Eloquent\\Model::asDateTime\(\)#'
		- '#Return type \(App\\Models\\Photo\) of method App\\Models\\Photo::replicate\(\) should be covariant with return type \(static\(.*\)\) of method Illuminate\\Database\\Eloquent\\Model::replicate\(\)#'
		- '#Return type \(Illuminate\\Support\\Collection&iterable<App\\Contracts\\AbstractAlbum>\) of method App\\Http\\Requests\\Album\\.*::albums\(\) should be covariant with return type \(Illuminate\\Support\\Collection&iterable<App\\Models\\(Album|Extensions\\BaseAlbum)>\) of method App\\Http\\Requests\\Contracts\\HasAlbums<App\\Models\\(Album|Extensions\\BaseAlbum)>::albums\(\)#'

		- '#Method App\\Models\\Extensions\\.*::.* should return \$this\(.*\) but returns static\(.*\)#'
		- '#Method App\\Models\\Extensions\\.*::.* should return \$this\(.*\) but returns Illuminate\\Database\\Eloquent\\Builder<.*>\.#'
		-
			message: '#Variable method call on \$this#' # We do want this
			paths:
				- app/SmartAlbums/Utils/MimicModel.php
				- app/Models/Extensions/HasBidirectionalRelationships.php
		-
			message: '#Variable property access on \$this#' # We do want this
			paths:
				- app/SmartAlbums/Utils/MimicModel.php

		- '#Call to an undefined( static)? method Kalnoy\\Nestedset\\.*::(whereIn|select|join|leftJoin|orderBy|addSelect)\(\)#'
		- '#Parameter .* of method .*::newEloquentBuilder\(\) should be contravariant with parameter \$query \(mixed\) of method Kalnoy\\Nestedset\\Node::newEloquentBuilder\(\)#'
		- '#Call to an undefined method Geocoder\\Location::getDisplayName\(\)#'
		- '#Call to an undefined method COM::getfolder\(\).#'
		- '#Call to an undefined method League\\Flysystem\\FilesystemInterface::getAdapter\(\)#'

		# https://github.com/thecodingmachine/safe/issues/283
		- '#Parameter \#(1|2) \$.* of function Safe\\image.* expects (resource|GdImage), (GdImage|resource)?(\|resource)? given.#'

		- '#Property .* \(App\\Models\\.*(\|null)?\) does not accept (Illuminate\\Database\\Eloquent\\Collection<Illuminate\\Database\\Eloquent\\Model>\|)?Illuminate\\Database\\Eloquent\\Model(\|null)?.#'
		- '#Property .* \(Illuminate\\Database\\Eloquent\\Collection<App\\Models\\.*>\) does not accept Illuminate\\Database\\Eloquent\\Collection<Illuminate\\Database\\Eloquent\\Model>(\|Illuminate\\Database\\Eloquent\\Model)?.#'
		- '#Property .* \(Illuminate\\Support\\Collection&iterable<App\\Contracts\\.*>\) does not accept Illuminate\\Database\\Eloquent\\Collection<Illuminate\\Database\\Eloquent\\Model>(\|Illuminate\\Database\\Eloquent\\Model)?.#'
		- '#Parameter .* \$callback of function call_user_func expects callable\(\): mixed, .* given\.#'